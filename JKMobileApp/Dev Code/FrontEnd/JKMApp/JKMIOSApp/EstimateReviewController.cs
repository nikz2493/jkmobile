// This file has been autogenerated from a class added in the UI designer.

using System;
using Foundation;
using JKMPCL.Common;
using JKMPCL.Model;
using UIKit;
using System.Linq;
namespace JKMIOSApp
{
    /// <summary>
    /// Controller Name : EstimateReviewController
    /// Author          : Hiren Patel
    /// Creation Date   : 16 JAN 2018
    /// Purpose         : To display estimate review page screen as estimate wizard step
    /// Revision        : 
    /// </summary>
	public partial class EstimateReviewController : UIViewController
    {
        private EstimateModel estimateModel;

        public EstimateReviewController(IntPtr handle) : base(handle)
        {
        }

        public override void ViewWillAppear(bool animated)
        {
            base.ViewWillAppear(animated);

        }

        public override void ViewDidLoad()
        {
            base.ViewDidLoad();
            InitilizeIntarface();
            PopulateData();

        }

        public override void ViewDidAppear(bool animated)
        {
            base.ViewDidAppear(animated);
        }
        /// <summary>
        /// Method Name     : InitilizeIntarface
        /// Author          : Hiren Patel
        /// Creation Date   : 29 Dec 2017
        /// Purpose         : To Initilizes the intarface.
        /// Revision        : 
        /// </summary>
        public void InitilizeIntarface()
        {
            UIHelper.DismissKeyboardOnBackgroundTap(this);
            btnMoreInformation.TouchUpInside += BtnMoreInformation_TouchUpInside;
            btnConfirm.TouchUpInside += BtnConfirm_TouchUpInside;
            btnViewEstimate.TouchUpInside += BtnViewEstimate_TouchUpInside;
            UIHelper.SetDefaultEstimateButtonProperty(btnViewEstimate);
            txtEstimatedCost.UserInteractionEnabled = false;
        }


        /// <summary>
        /// Method Name     : BtnMoreInformation_TouchUpInside
        /// Author          : Hiren Patel
        /// Creation Date   : 29 Dec 2017
        /// Purpose         : To get more information about estimate review.
        /// Revision        : 
        /// </summary>
        /// <param name="sender">Sender.</param>
        /// <param name="e">Event Argument</param>
        private void BtnMoreInformation_TouchUpInside(object sender, EventArgs e)
        {
            UIHelper.CallingScreenContactUs = JKMEnum.UIViewControllerID.EstimateReviewView;
            UIHelper.RedirectToViewController(this, JKMEnum.UIViewControllerID.ContactusView);
           
        }

        /// <summary>
        /// Method Name     : BtnConfirm_TouchUpInside
        /// Author          : Hiren Patel
        /// Creation Date   : 29 Dec 2017
        /// Purpose         : To confimred estimate review data and redirect to services screen.
        /// Revision        : 
        /// </summary>
        /// <param name="sender">Sender.</param>
        /// <param name="e">Event Argument</param>
        private void BtnConfirm_TouchUpInside(object sender, EventArgs e)
        {
            PerformSegue("estimateReviewToServices", this);
        }

        /// <summary>
        /// Method Name     : btnViewEstimatePressed
        /// Author          : Hiren Patel
        /// Creation Date   : 29 Dec 2017
        /// Purpose         : To view or download estimate pdf file
        /// Revision        : 
        /// </summary>
        /// <param name="sender">Sender.</param>
        /// <param name="e">Event Argument</param> 
        private void BtnViewEstimate_TouchUpInside(object sender, EventArgs e)
        {
            UIHelper.CallingScreen = JKMEnum.UIViewControllerID.EstimateReviewView;
            UIHelper.RedirectToViewController(this, JKMEnum.UIViewControllerID.ViewEstimateReviewView);
        }

        /// <summary>
        /// Method Name     : PopulateData
        /// Author          : Hiren Patel
        /// Creation Date   : 2 Dec 2017
        /// Purpose         : fill Estimate Data  
        /// Revision        : 
        /// </summary>
        public void PopulateData()
        {
           
            if (DTOConsumer.dtoEstimateData != null)
            {
                estimateModel = DTOConsumer.GetSelectedEstimate();
                if (estimateModel != null)
                {
                    txtEstimatedCost.Text = estimateModel.EstimatedLineHaul;

                }
            }
            UIHelper.CreateWizardHeader(1, viewHeader,estimateModel);
        }
    }
}
